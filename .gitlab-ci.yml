image: docker:19.03.12

services:
  - docker:19.03.12-dind

stages:
  - build
  - test
  - deploy
  - stop

variables:
  IMAGE_TAG: $CI_COMMIT_BRANCH-$CI_COMMIT_SHORT_SHA
  DOCKER_DRIVER: overlay
  DOCKER_HOST: tcp://docker:2375 
  DOCKER_TLS_CERTDIR: ""

before_script:
  - docker login -u $GITLAB_CI_USER -p $GITLAB_CI_PASSWORD $CI_REGISTRY

build image:
  stage: build
  script:
    - echo $GITLAB_CI_USER $GITLAB_CI_PASSWORD $CI_REGISTRY $CI_REGISTRY_IMAGE:$IMAGE_TAG
    - docker build -t $CI_REGISTRY_IMAGE:$IMAGE_TAG .
    - docker push $CI_REGISTRY_IMAGE:$IMAGE_TAG

test image:
  stage: test 
  script:
    - docker run -d --name test $CI_REGISTRY_IMAGE:$IMAGE_TAG
    - docker ps

deploy image to preprod:
  stage: deploy
  variables:
    TARGET_ENV: predprod
    MyLogin: prpAdmin
  script:
    - echo "Deploy image $IMAGE_TAG to ${TARGET_ENV} with ${MyLogin}:${MyPassword}"
  only:
    - main
  environment:
    name: predprod
    on_stop: stop to predprod
    auto_stop_in: 1 day

deploy image to production:
  stage: deploy
  variables:
    TARGET_ENV: production
    MyLogin: prodAdmin
  script:
    - echo "Deploy image $IMAGE_TAG to ${TARGET_ENV} with ${MyLogin}:${MyPassword}"
  only:
    - main
  environment:
    name: production
    on_stop: stop to production

stop to predprod:
  stage: stop
  variables:
    TARGET_ENV: predprod
  script:
    - echo "STOP image $IMAGE_TAG to ${TARGET_ENV}"
  only:
    - main
  when: manual
  environment:
    name: predprod
    action: stop

stop to production:
  stage: stop
  variables:
    TARGET_ENV: production
  script:
    - echo "STOP image $IMAGE_TAG to ${TARGET_ENV}"
  only:
    - main
  when: manual
  environment:
    name: production
    action: stop